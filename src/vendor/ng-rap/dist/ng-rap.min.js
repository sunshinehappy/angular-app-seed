angular.module("ngRap",[]).provider("ngRap",[function(){function a(a,b){return a.some(function(a){return"string"==typeof a&&(b.indexOf(a)>=0||a.indexOf(b)>=0)?!0:"object"==typeof a&&a instanceof RegExp&&a.test(b)?!0:void 0})}var b=this;this.enable=function(a){this.enabled=!0,this.mode=a.mode},this.$get=["$injector","$q",function(c,d){function e(){var a=d.defer(),c=document.createElement("script");return c.src=b.script,c.onload=c.onreadystatechange=function(b,d){(d||!c.readyState||/loaded|complete/.test(c.readyState))&&(c.onload=c.onreadystatechange=null,c=void 0,d||a.resolve())},document.body.appendChild(c),a.promise}var f={check:function(a,b){var d=c.get("$http");d.get(a).success(function(a){RAP.checkerHandler.call({data:b},a)})},intercept:function(b){{var d=RAP.getMode(),e=b.url,f="http://"+RAP.getHost()+"/mockjsdata/"+RAP.getProjectId(),g=f+e,h=RAP.getWhiteList();c.get("$http")}return 0==b.url.indexOf(f)?b:(RAP.router(e)?(b.mocked=!0,b.url=g):0==d&&a(h,e)&&(b.needCheck=g),b)},loaded:b.enabled&&e().then(function(){window.RAP&&RAP.setMode(b.mode)})};return f}]}]).factory("rapMockInterceptor",["$q","ngRap",function(a,b){return{request:function(a){return b.loaded?b.loaded.then(function(){return b.intercept(a)}):a},response:function(a){var c=a.data;return b.loaded&&!a.config.mocked&&b.loaded.then(function(){a.config.needCheck&&b.check(a.config.needCheck,c)}),a}}}]);